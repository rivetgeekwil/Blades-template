//- mixin claimbox(number)
//- 	+hidden-input(`claim_${number}_check`)(value='0')
//- 	.claimbox
//- 		label
//- 			+checkbox(`claim_${number}_check`).checkbox.squarebox-small
//- 		+textarea(`claim_${number}_name`).label
//- 		+textarea(`claim_${number}_desc`).claim-desc

//- mixin claimbridge(number, type)
//- 	label(class=['claimbridge', type === 'vert' ? 'claims-vertsep' : 'claims-horisep'])
//- 		+checkbox(`claim_bridge_${number}`)(checked)

//- mixin makeupgrade(number, numboxes, def, desc)
//- 	.col50
//- 		.item
//- 			+checkbox(`upgrade_${number}_check_1`).checkbox.squarebox
//- 			if (numboxes === 2)
//- 				+checkbox(`upgrade_${number}_check_2`).checkbox.squarebox
//- 			if (numboxes === 3)
//- 				+checkbox(`upgrade_${number}_check_3`).checkbox.squarebox
//- 			+text-input(`upgrade_${number}_name`, def).itemname
//- 		.item-description
//- 			+checkbox(`upgrade_${number}_expand`).expand
//- 			+textarea(`upgrade_${number}_description`, desc)(data-i18n-placeholder='description')

mixin makeupgrade(number, numboxes, def, desc,link)
	.col50
		.item
			each numbox in range(1,numboxes)
				+checkbox(`upgrade_${number}_check_${numbox}`).checkbox.squarebox
				if (link === 1)
					if(numbox < numboxes )
						span.floatingbar
			+text-input(`upgrade_${number}_name`, def).itemname
	
		.item-description
			if (desc!='')
				+checkbox(`upgrade_${number}_expand`).expand
				+textarea(`upgrade_${number}_description`, desc)(data-i18n-placeholder='description')



// Cell Sheet
.type-crew.flex
	// Left column
	.col55.flex-wrap
		// Logo, Header text fields
		.col100.header.flex-wrap
			.col55.bladeslogo
			.col45.crewheader.label(data-i18n='cell_sheet')
			label.col55
				+text-input('cell_name')
				.label.text.title(data-i18n='name')
			label.col45
				+text-input('sanctuary')
				.label.text.title(data-i18n='sanctuary')
			label.col100
				+autoexpand('cause')
				+hidden-input('cause')(value='')
				.text
					span.label.title(data-i18n='reputation')
					span.uppercase.info(data-i18n='reputation_info' name="reputation")
			label.col100
				+autoexpand('cause')
				+hidden-input('cause')(value='')
				.text
					span.label.title(data-i18n='cause')
					span.uppercase.info(data-i18n='cause_info' name="cause")
			label.col100
				+autoexpand('aptitude')
				+hidden-input('aptitude')(value='')
				.text
					span.label.title(data-i18n='aptitude')
					span.uppercase.info(data-i18n='aptitude_info' name="aptitude")
		//- // Rep, Hold, and Tier
		//- .col100.flex.rep-and-hold.def-margin
		//- 	.rep.flex.col45
		//- 		.rep1.blackheader
		//- 			.label(data-i18n='rep')
		//- 		.rep2.blackborder.flex
		//- 			.turfbox
		//- 				each num in range(1,6)
		//- 					+radio('turf')(value=num)
		//- 			+hidden-input('turf')(value='0').turf-input
		//- 			+radio('rep')(value='0', checked).tooth.zero
		//- 			//- generates 12 rep boxes. The complicated code for the class assigns the necessary CSS classes for turf to work correctly
		//- 			each num in range(1,12)
		//- 				+radio('rep')(class=['tooth', 'stresstooth', ...((num < 6) ? [] : [...Array(num-6).keys()].map(x => `turf${6-x}`))], value=num)
		//- 		.rep3.blackborder
		//- 			.black-on-grey
		//- 				.label(data-i18n='turf')
		//- 			.turfzero-holder
		//- 				+radio('turf')(value='0', checked).zero
			//- // Hold
			//- .hold.flex
			//- 	.hold1.blackheader
			//- 		.label(data-i18n='hold')
			//- 	label.blackborder
			//- 		.black-on-grey
			//- 			.label(data-i18n='weak')
			//- 		+radio('hold')(value='weak').tooth.holdtooth
			//- 	label.blackborder
			//- 		.black-on-grey
			//- 			.label(data-i18n='strong')
			//- 		+radio('hold')(value='strong', checked).tooth.holdtooth
			//- 	// Tier
			//- 	.blackheader
			//- 		+roll('Tier', '{{resist=1}} {{short=1}} {{title=^{crew_tier}}} {{subtitle=^{roll_their}}} @{crew_tier_formula}')(data-i18n='tier').label.inherit.rollbutton
			//- 		+hidden-input('crew_tier_formula')(value=zerodiceFormula)
			//- 	.tier.flex
			//- 		+hidden-checkbox('crew_tier')(value='0', checked).fakeradio
			//- 		//- generates 4 tier circles
			//- 		each num in range(1,4)
			//- 			+checkbox('crew_tier')(value=num).checkbox.circlebox.fakeradio
		//- // Claims
		//- .claims.col100.free-repcontrol
		//- 	.claimsrow.flex
		//- 		each num in range(1,5)
		//- 			+claimbox(num)
		//- 			if (num !== 5)
		//- 				+claimbridge(`${num}_${num+1}`, 'hori')
		//- 	.claims-seprow.flex
		//- 		each num in range(1,5)
		//- 			+claimbridge(`${num}_${num+5}`, 'vert')
		//- 	.claimsrow.flex
		//- 		+claimbox(6)
		//- 		+claimbridge('6_7', 'hori')
		//- 		+claimbox(7)
		//- 		+claimbridge('7_8', 'hori')
		//- 		.lairbox.flex-center.uppercase(data-i18n='lair')
		//- 		+claimbridge('8_9', 'hori')
		//- 		+claimbox(9)
		//- 		+claimbridge('9_10', 'hori')
		//- 		+claimbox(10)
		//- 	.claims-seprow.flex
		//- 		each num in range(6,10)
		//- 			+claimbridge(`${num}_${num+5}`, 'vert')
		//- 	.claimsrow.flex
		//- 		each num in range(11,15)
		//- 			+claimbox(num)
		//- 			if (num !== 15)
		//- 				+claimbridge(`${num}_${num+1}`, 'hori')
		//- 	fieldset.repeating_claim
		//- 		.claims-seprow.flex
		//- 			each num in range(1,5)
		//- 				+claimbridge(`top_${num}`, 'vert')
		//- 		.claimsrow.flex
		//- 			each num in range(1,5)
		//- 				+claimbox(num)
		//- 				if (num !== 5)
		//- 					+claimbridge(`${num}_${num+1}`, 'hori')
		//- Heat and Coin
		.col100.flex.heat-and-vault.def-margin
			//- // Heat
			//- .col45.flex.heat
			//- 	// Heat markers
			//- 	.heat1.blackheader
			//- 		.label(data-i18n='heat')
			//- 	.heat2.blackborder.flex
			//- 		+radio('heat')(value='0', checked).tooth.zero
			//- 		//- generates 9 heat boxes
			//- 		each num in range(1,9)
			//- 			+radio('heat')(value=num).tooth.stresstooth
			//- 	// Wanted Level
			//- 	.heat3
			//- 		.blackheader
			//- 			+roll('Wanted', '{{vice=1}} {{short=1}} {{title=^{entanglement}}} {{subtitle=^{wantedroll1}@{heat}&nbsp;^{heat}^{wantedroll2}}} @{wanted_formula}')(data-i18n='wanted').label.inherit.rollbutton
			//- 			+hidden-input('wanted_formula')(value=zerodiceFormula)
			//- 		.wantedholder.flex
			//- 			+radio('wanted')(value='0', checked).tooth.zero
			//- 			//- generates 4 wanted boxes
			//- 			each num in range(1,4)
			//- 				+radio('wanted')(value=num).tooth.regulartooth
			//- Resources
			.col45.flex.crewcoin
				.col100.blackheader
					.label(data-i18n='resources')
					//- .greyheader.crewcoin2
					//- 	.label(data-i18n='vaults')
				.col100.flex.crewcoin-coins
					+radio('cellresource')(value='0', checked).zero
					each num in range(1,5)
						+radio('cellresource')(value=num).radiobox
					.crewcoinbar
					each num in range(6,10)
						+radio('cellresource')(value=num).radiobox.vaultcoin
			// Barter
			.col55.flex.crewcoin
				.col100.blackheader
					.label(data-i18n='barter')
					//- .greyheader.crewcoin2
					//- 	.label(data-i18n='vaults')
				.col100.flex.crewcoin-coins
					+radio('cellbarter')(value='0', checked).zero
					each num in range(1,5)
						+radio('cellbarter')(value=num).radiobox
					.crewcoinbar
					each num in range(6,10)
						+radio('cellbarter')(value=num).radiobox.vaultcoin
		// Special abilities
		.col100.def-margin
			.specialheader.col100.label(data-i18n='special_abilities')
			.greyholder.col100
				fieldset.repeating_crewability
					.specialability.flex
						+broadcast('Show', '{{charname=@{character_name}}} {{type=^{special_ability}}} {{title=@{name}}} {{content=@{description}}}')
						+checkbox('check').checkbox.circlebox
						+autoexpand('name')(data-i18n-placeholder='ability_name').abilityname.smallcaps
						+autoexpand('description')(data-i18n-placeholder='ability_description').abilitydesc
		// Advancement
		.col100.def-margin
			.advancement-header.flex.blackheader
				.label.markxp(data-i18n='mark_xp:')
				.label(data-i18n='crew_advancement')
				.xpholder.flex
					+radio('crew_xp')(value='0', checked).tooth.zero
					//- up to 10 XP
					each num in range(1,10)
						+radio('crew_xp')(value=num).tooth.xptooth
			ul.advancement-desc
				li.nondot(data-i18n='xp_top')
				li
					+autoexpand('xp_condition_extra')(data-i18n-placeholder='xp_specific_extra')
				li(data-i18n='xp_challenge')
				li(data-i18n='xp_bolster')
				li(data-i18n='xp_express')
				li.nondot(data-i18n='xp_choose')
				li.nondot
					+checkbox('check').checkbox.circlebox
					span(data-i18n='xp_popular')
				li.nondot
					+checkbox('check1').checkbox.circlebox
					span(data-i18n='xp_protected')
				li.nondot
					+checkbox('check2').checkbox.circlebox
					span(data-i18n='xp_built')

	// Right column
	.col45.flex-wrap.right-column
		// Crew Type
		.playbook.flex
			+text-input('crew_type')(data-i18n-placeholder='crew', placeholder='Crew').label
			+textarea('crew_description')(data-i18n-placeholder='crew_description', placeholder='A short crew description').label
			+hidden-input('show_playbook_reminder')(value='1').hider
			.reminder
				span(data-i18n='autofill_reminder_crew')
				br
				span(data-i18n='list_crews')
		// Upgrades and Hunting Grounds
		.col53.small-margin
			// Upgrades
			.itemheader.col100
				span.label(data-i18n='boons')
			.itemholder.col100.upgrades
				// Specific upgrades
				.playbookitems.col100.free-repcontrol
					fieldset.repeating_upgrade
						+hidden-input('boxes_chosen')(value='0').boxes-chosen
						.item.numboxes-chooser
							div(data-i18n='how_many_boxes')
							+number-input('numboxes')(min='1', max='3', value='1')
							label
								+checkbox('boxes_chosen')(data-i18n='ok')
						.item
							+hidden-input('numboxes')(value='1').numboxes
							+checkbox('check_1').checkbox.squarebox
							span.floatingbar.boxesgeq2
							+checkbox('check_2', 'boxesgeq2').checkbox.squarebox
							span.floatingbar.boxesgeq3.boxesgeq2
							+checkbox('check_3', 'boxesgeq2 boxesgeq3').checkbox.squarebox
							+autoexpand('name')(data-i18n-placeholder='an_upgrade').itemname
						.item-d
							+textarea('description')(data-i18n-placeholder='description')
				// Regular upgrades
				.itemheader.col100
					span.label(data-i18n='crew_upgrades')
				.regularitems.flex-wrap.col100
					.blackheader.col75
						+roll('Tier', '{{resist=1}} {{short=1}} {{title=^{community}}} {{subtitle=^{roll_their}}} @{community_formula}')(data-i18n='community').label.inherit.rollbutton
						+hidden-input('community_formula')(value=zerodiceFormula)
					.tier.col25
						+hidden-checkbox('community')(value='0', checked).fakeradio
						each num in range(1,4)
							+checkbox('community')(value=num).checkbox.circlebox.fakeradio
							//- generates 4 tier circles
					+makeupgrade(1, 2, 'advocate', 'upgrade_advocate_description',1)
					+makeupgrade(2, 2, 'counselor', 'upgrade_counselor_description',1)
					+makeupgrade(3, 2, 'fixer', 'upgrade_fixer_description',1)
					+makeupgrade(4, 2, 'mentor', 'upgrade_mentor_description',1)
					+makeupgrade(5, 1, 'contact', 'upgrade_contact_description',0)
					+makeupgrade(6, 1, 'diversion', 'upgrade_diversion_description',0)
					+makeupgrade(7, 1, 'side_quest', 'upgrade_side_quest_description',0)
					.blackheader.col75
						+roll('Tier', '{{resist=1}} {{short=1}} {{title=^{sanctuary}}} {{subtitle=^{roll_their}}} @{sanctuary_formula}')(data-i18n='sanctuary').label.inherit.rollbutton
						+hidden-input('sanctuary_formula')(value=zerodiceFormula)
					.tier.col25
						+hidden-checkbox('sanctuary')(value='0', checked).fakeradio
						each num in range(1,4)
							+checkbox('sanctuary')(value=num).checkbox.circlebox.fakeradio
							//- generates 4 tier circles
					+makeupgrade(8, 1, 'infirmary', 'upgrade_infirmary_description',0)
					+makeupgrade(9, 1, 'quarters', 'upgrade_quarters_description',0)
					+makeupgrade(10, 2, 'secure', 'upgrade_secure_description',0)
					+makeupgrade(11, 2, 'transport', 'upgrade_transport_description',0)
					+makeupgrade(12, 3, 'tunnels', 'upgrade_tunnels_description',0)
					+makeupgrade(0, 0, '', '',0)
					+makeupgrade(0, 0, 'training', '',0)
					+makeupgrade(0, 0, 'professionals', '',0)
					+makeupgrade(13, 1, 'insight', 'upgrade_insight_description')
					+makeupgrade(14, 2, 'healer', 'upgrade_healer_description',1)
					+makeupgrade(15, 1, 'prowess', 'upgrade_prowess_description',0)
					+makeupgrade(16, 2, 'maker', 'upgrade_healer_description',1)
					+makeupgrade(17, 1, 'resolve', 'upgrade_resolve_description',0)
					+makeupgrade(18, 2, 'pilot', 'upgrade_pilot_description',1)
					+makeupgrade(19, 1, 'personal', 'upgrade_personal_description',0)
					+makeupgrade(20, 2, 'ranger', 'upgrade_pilot_description',1)
					col100
						.item
							each num in range(1,4)
								+checkbox(`upgrade_21_check_${num}`).checkbox.squarebox
								if (num < 4)
									span.floatingbar
							+text-input('upgrade_21_name', 'mastery').itemname
						.item-description
							+checkbox('upgrade_21_expand').expand
							+textarea('upgrade_21_description', 'upgrade_mastery_description')(data-i18n-placeholder='description')
					.blackheader.col75
						+roll('Tier', '{{resist=1}} {{short=1}} {{title=^{supply}}} {{subtitle=^{roll_their}}} @{supply_formula}')(data-i18n='supply').label.inherit.rollbutton
						+hidden-input('supply_formula')(value=zerodiceFormula)
					.tier.col25
						+hidden-checkbox('supply')(value='0', checked).fakeradio
						each num in range(1,4)
							+checkbox('supply')(value=num).checkbox.circlebox.fakeradio
					+makeupgrade(50, 1, 'storageupgd', 'upgrade_storageupgd_description',0)
					+makeupgrade(0, 0, '', '',0)
					+makeupgrade(0, 0, 'quality', 'upgrade_quality_description',0)
					+makeupgrade(0, 0, 'load', 'upgrade_load_description',0)
					+makeupgrade(23, 1, 'armor_quality', '',0)
					+makeupgrade(24, 1, 'armor_load', '',0)
					+makeupgrade(25, 1, 'basic_gear_quality', '',0)
					+makeupgrade(26, 1, 'basic_gear_load', '',0)
					+makeupgrade(27, 1, 'tools_kits_quality', '',0)
					+makeupgrade(28, 1, 'tools_kits_load', '',0)
					+makeupgrade(29, 1, 'weapons_quality', '',0)
					+makeupgrade(30, 1, 'weapons_load', '',0)
							//- generates 4 tier circles
					.blackheader.col75
						+roll('Tier', '{{resist=1}} {{short=1}} {{title=^{vision}}} {{subtitle=^{roll_their}}} @{vision_formula}')(data-i18n='vision').label.inherit.rollbutton
						+hidden-input('vision_formula')(value=zerodiceFormula)
					.tier.col25
						+hidden-checkbox('vision')(value='0', checked).fakeradio
						each num in range(1,4)
							+checkbox('vision')(value=num).checkbox.circlebox.fakeradio
					+makeupgrade(31, 1, 'patron_spirit', 'upgrade_patron_spirit_description',0)
					+makeupgrade(0, 0, 'rituals', '',0)
					+makeupgrade(32, 2, 'ritual_space', 'upgrade_ritual_space_description',0)
					+makeupgrade(33, 1, 'divination', '',0)
					+makeupgrade(0, 0, 'adepts', '',0)
					+makeupgrade(34, 1, 'enchantment', '',0)
					+makeupgrade(35, 2, 'dreamer', 'upgrade_dreamer_description',0)
					+makeupgrade(36, 1, 'nature', '',0)
					+makeupgrade(37, 2, 'ritualist', 'upgrade_ritualist_description',0)
					+makeupgrade(38, 1, 'old_arts', '',0)
					+makeupgrade(39, 2, 'seer', 'upgrade_seer_description',0)
					+makeupgrade(40, 1, 'synthesis', '',0)
					+makeupgrade(41, 2, 'spiritualist', 'upgrade_spirutalist_description',0)
					+makeupgrade(42, 1, 'summoning', '',0)
					+makeupgrade(0, 0, '', '',0)
					+makeupgrade(43, 1, 'sundering', '',0)


							//- generates 4 tier circles
				
				//- +makeupgrade(20, 1, 'insight', 'upgrade_insight_description')
				//- .item.col50
				//- 	.label.upgradecosts(data-i18n='upgrade_costs')
				//- +makeupgrade(21, 1, 'prowess', 'upgrade_prowess_description')
				//- .item.col50
				//- 	.upgradecosts(data-i18n='new_cohort')
				//- +makeupgrade(22, 1, 'resolve', 'upgrade_resolve_description')
				//- .item.col50
				//- 	.upgradecosts(data-i18n='add_type')
				//- +makeupgrade(23, 1, 'personal', 'upgrade_personal_description')
				//- .col100
				//- 	.item
				//- 		each num in range(1,4)
				//- 			+checkbox(`upgrade_24_check_${num}`).checkbox.squarebox
				//- 			if (num < 4)
				//- 				span.floatingbar
				//- 		+text-input('upgrade_24_name', 'mastery').itemname
				//- 	.item-description
				//- 		+checkbox('upgrade_24_expand').expand
				//- 		+textarea('upgrade_24_description', 'upgrade_mastery_description')(data-i18n-placeholder='description')
			//- .hunting-grounds.col100.def-margin
			//- 	+autoexpand('hunting_grounds_type')(data-i18n-placeholder='hunting_grounds').plainheader.label
			//- 	+autoexpand('hunting_grounds_description')(data-i18n-placeholder='hunting_grounds_description').description
			+fortuneroll('Engagement', '{{action=1}} {{short=1}} {{small-title=1}} {{subtitle=^{roll_for}}} {{title=^{engagement}}}')(data-i18n='roll_engagement').engagementbutton.borderbutton
		// Cohorts and Contacts
		.col47.right-column.small-margin
			// First Cohort
			+makecohort('cohort1_')
			// Cohort repeating section
			.col100.cohorts.free-repcontrol
				fieldset.repeating_cohort
					+makecohort('')
			// Contacts
			.col100.def-margin.contacts
				.specialheader.col100.label.flex
					+text-input('contacts_title', 'contacts').inherit
				.greyholder.col100
					fieldset.repeating_contact
						.friend-contact.contact.flex
							+hidden-input('check')(value='0').friendstate
							label
								+checkbox('check').checkbox
							+autoexpand('name')(data-i18n-placeholder='contact_name')
						+checkbox(null).expand
						+textarea('description')(data-i18n-placeholder='notes').description
			// Roll Fortune
			+fortuneroll('Fortune_crew', '{{fortune=1}} {{subtitle=^{roll}}} {{title=^{fortune}}}', true)(data-i18n='roll_fortune').fortunebutton.borderbutton
		// Clocks
		.col100.clocks.def-margin.free-repcontrol
			.specialheader.label(data-i18n='clocks')
			fieldset.repeating_crewclock
				+makeclock
		+textarea('crew_notes')(data-i18n-placeholder='notes').notes
